var _CSGDEBUG=!1;CSG=function(){this.polygons=[];this.properties=new CSG.Properties;this.isRetesselated=this.isCanonicalized=!0};CSG.defaultResolution2D=32;CSG.defaultResolution3D=12;CSG.fromPolygons=function(a){var b=new CSG;b.polygons=a;b.isCanonicalized=!1;b.isRetesselated=!1;return b};CSG.fromObject=function(a){a=a.polygons.map(function(a){return CSG.Polygon.fromObject(a)});a=CSG.fromPolygons(a);return a=a.canonicalized()};
CSG.fromCompactBinary=function(a){if("CSG"!=a.clazz)throw Error("Not a CSG");for(var b=[],c=a.planeData,d=c.length/4,e=0,f=0;f<d;f++){var g=c[e++],h=c[e++],l=c[e++],n=c[e++],g=new CSG.Vector3D(g,h,l),g=new CSG.Plane(g,n);b.push(g)}c=[];d=a.vertexData;f=d.length/3;for(n=e=0;n<f;n++)g=d[e++],h=d[e++],l=d[e++],g=new CSG.Vector3D(g,h,l),g=new CSG.Vertex(g),c.push(g);for(var h=a.shared.map(function(a){return CSG.Polygon.Shared.fromObject(a)}),l=[],d=a.numPolygons,f=a.numVerticesPerPolygon,n=a.polygonVertices,
k=a.polygonPlaneIndexes,a=a.polygonSharedIndexes,m=e=0;m<d;m++){for(var g=f[m],j=[],q=0;q<g;q++)j.push(c[n[e++]]);g=b[k[m]];g=new CSG.Polygon(j,h[a[m]],g);l.push(g)}b=CSG.fromPolygons(l);b.isCanonicalized=!0;b.isRetesselated=!0;return b};
CSG.prototype={toPolygons:function(){return this.polygons},union:function(a){for(var a=a instanceof Array?a:[a],b=this,c=0;c<a.length;c++)var d=c==a.length-1,b=b.unionSub(a[c],d,d);return b},unionSub:function(a,b,c){if(this.mayOverlap(a)){var d=new CSG.Tree(this.polygons),e=new CSG.Tree(a.polygons);d.clipTo(e,!1);e.clipTo(d);e.invert();e.clipTo(d);e.invert();d=d.allPolygons().concat(e.allPolygons());d=CSG.fromPolygons(d);d.properties=this.properties._merge(a.properties);b&&(d=d.reTesselated());c&&
(d=d.canonicalized());return d}return this.unionForNonIntersecting(a)},unionForNonIntersecting:function(a){var b=this.polygons.concat(a.polygons),b=CSG.fromPolygons(b);b.properties=this.properties._merge(a.properties);b.isCanonicalized=this.isCanonicalized&&a.isCanonicalized;b.isRetesselated=this.isRetesselated&&a.isRetesselated;return b},subtract:function(a){for(var a=a instanceof Array?a:[a],b=this,c=0;c<a.length;c++)var d=c==a.length-1,b=b.subtractSub(a[c],d,d);return b},subtractSub:function(a,
b,c){var d=new CSG.Tree(this.polygons),e=new CSG.Tree(a.polygons);d.invert();d.clipTo(e);e.clipTo(d,!0);d.addPolygons(e.allPolygons());d.invert();d=CSG.fromPolygons(d.allPolygons());d.properties=this.properties._merge(a.properties);b&&(d=d.reTesselated());c&&(d=d.canonicalized());return d},intersect:function(a){for(var a=a instanceof Array?a:[a],b=this,c=0;c<a.length;c++)var d=c==a.length-1,b=b.intersectSub(a[c],d,d);return b},intersectSub:function(a,b,c){var d=new CSG.Tree(this.polygons),e=new CSG.Tree(a.polygons);
d.invert();e.clipTo(d);e.invert();d.clipTo(e);e.clipTo(d);d.addPolygons(e.allPolygons());d.invert();d=CSG.fromPolygons(d.allPolygons());d.properties=this.properties._merge(a.properties);b&&(d=d.reTesselated());c&&(d=d.canonicalized());return d},inverse:function(){var a=this.polygons.map(function(a){return a.flipped()});return CSG.fromPolygons(a)},transform1:function(a){var b=this.polygons.map(function(b){return b.transform(a)}),b=CSG.fromPolygons(b);b.properties=this.properties._transform(a);b.isRetesselated=
this.isRetesselated;return b},transform:function(a){var b=a.isMirroring(),c={},d={},e=this.polygons.map(function(e){var g;g=e.plane;var h=g.getTag();h in d?g=d[h]:(g=g.transform(a),d[h]=g);h=e.vertices.map(function(b){var d=b.getTag();d in c?b=c[d]:(b=b.transform(a),c[d]=b);return b});b&&h.reverse();return new CSG.Polygon(h,e.shared,g)}),e=CSG.fromPolygons(e);e.properties=this.properties._transform(a);e.isRetesselated=this.isRetesselated;e.isCanonicalized=this.isCanonicalized;return e},toStlString:function(){var a=
"solid csg.js\n";this.polygons.map(function(b){a+=b.toStlString()});return a+="endsolid csg.js\n"},toStlBinary:function(a){var b=new ArrayBuffer(4),c=new Int32Array(b,0,1),d=new Int8Array(b,0,4);c[0]=287454020;if(68!=d[0])throw Error("Binary STL output is currently only supported on little-endian (Intel) processors");var e=0;this.polygons.map(function(a){a=a.vertices.length;e+=3<=a?a-2:0});c=new Uint8Array(80);for(d=0;80>d;d++)c[d]=65;a.append(c.buffer);c=new Uint32Array(1);c[0]=e;a.append(c.buffer);
b=new ArrayBuffer(50);this.polygons.map(function(c){for(var d=c.vertices.length,e=0;e<d-2;e++){var l=new Float32Array(b,0,12),n=c.plane.normal;l[0]=n._x;l[1]=n._y;l[2]=n._z;for(var n=3,k=0;3>k;k++){var m=c.vertices[k+(0<k?e:0)].pos;l[n++]=m._x;l[n++]=m._y;l[n++]=m._z}(new Uint16Array(b,48,1))[0]=0;a.append(b)}})},toString:function(){var a="CSG solid:\n";this.polygons.map(function(b){a+=b.toString()});return a},expand:function(a,b){var c=this.expandedShell(a,b,!0),c=c.reTesselated();c.properties=this.properties;
return c},contract:function(a,b){var c=this.expandedShell(a,b,!1),c=this.subtract(c),c=c.reTesselated();c.properties=this.properties;return c},expandedShell:function(a,b,c){var d=this.reTesselated(),e;e=c?d:new CSG;d.polygons.map(function(b){var c=b.plane.normal.unit().times(2*a),b=b.translate(c.times(-0.5)).extrude(c);e=e.unionSub(b,!1,!1)});var f={};d.polygons.map(function(a){for(var b=a.vertices.length,c=a.vertices[b-1],d=c.getTag(),e=0;e<b;e++){var g=a.vertices[e],j=g.getTag(),d=j<d?j+"-"+d:d+
"-"+j;d in f?c=f[d]:(c={v1:c,v2:g,planenormals:[]},f[d]=c);c.planenormals.push(a.plane.normal);d=j;c=g}});for(vertextagpair in f){for(var g=f[vertextagpair],h=g.v1.pos,l=g.v2.pos,c=l.minus(h).unit(),n=g.planenormals[0].unit(),k=n.cross(c),m=[],c=0;c<b;c++){var j=2*c*Math.PI/b;m.push(j)}g.planenormals.map(function(a){var b=k.dot(a),a=n.dot(a),c=Math.atan2(b,a);0>c&&(c+=2*Math.PI);m.push(c);c=Math.atan2(-b,-a);0>c&&(c+=2*Math.PI);m.push(c)});for(var m=m.sort(function(a,b){return a-b}),g=m.length,q,
p,u=[],v=[],w=[],c=-1;c<g;c++){var j=m[0>c?c+g:c],r=Math.sin(j),j=Math.cos(j),r=n.times(j*a).plus(k.times(r*a)),j=h.plus(r),r=l.plus(r),s=!1;0<=c&&1E-5>j.distanceTo(q)&&(s=!0);s||(0<=c&&(u.push(new CSG.Vertex(j)),v.push(new CSG.Vertex(r)),q=[new CSG.Vertex(p),new CSG.Vertex(r),new CSG.Vertex(j),new CSG.Vertex(q)],q=new CSG.Polygon(q),w.push(q)),q=j,p=r)}v.reverse();w.push(new CSG.Polygon(u));w.push(new CSG.Polygon(v));c=CSG.fromPolygons(w);e=e.unionSub(c,!1,!1)}var t={};d.polygons.map(function(a){a.vertices.map(function(b){var c=
b.getTag();c in t?b=t[c]:(b={pos:b.pos,normals:[]},t[c]=b);b.normals.push(a.plane.normal)})});for(vertextag in t){d=t[vertextag];h=d.normals[0].unit();l=null;q=0;for(c=1;c<d.normals.length;c++)p=d.normals[c].unit(),g=h.cross(p).length(),0.05<g&&g>q&&(q=g,l=p);l||(l=h.randomNonParallelVector());c=h.cross(l).unit();l=c.cross(h);c=CSG.sphere({center:d.pos,radius:a,resolution:b,axes:[h,c,l]});e=e.unionSub(c,!1,!1)}return e},canonicalized:function(){if(this.isCanonicalized)return this;var a=(new CSG.fuzzyCSGFactory).getCSG(this);
a.isCanonicalized=!0;a.isRetesselated=this.isRetesselated;a.properties=this.properties;return a},reTesselated:function(){if(this.isRetesselated)return this;var a={};this.canonicalized().polygons.map(function(b){var c=b.plane.getTag(),d=b.shared.getTag(),c=c+("/"+d);c in a||(a[c]=[]);a[c].push(b)});var b=[];for(planetag in a){var c=a[planetag];if(2>c.length)b=b.concat(c);else{var d=[];CSG.reTesselateCoplanarPolygons(c,d);b=b.concat(d)}}b=CSG.fromPolygons(b);b.isRetesselated=!0;b=b.canonicalized();
b.properties=this.properties;return b},getBounds:function(){if(!this.cachedBoundingBox){for(var a=new CSG.Vector3D(0,0,0),b=new CSG.Vector3D(0,0,0),c=this.polygons,d=c.length,e=0;e<d;e++){var f=c[e].boundingBox();0==e?(a=f[0],b=f[1]):(a=a.min(f[0]),b=b.max(f[1]))}this.cachedBoundingBox=[a,b]}return this.cachedBoundingBox},mayOverlap:function(a){if(0==this.polygons.length||0==a.polygons.length)return!1;var b=this.getBounds(),a=a.getBounds();return b[1].x<a[0].x||b[0].x>a[1].x||b[1].y<a[0].y||b[0].y>
a[1].y||b[1].z<a[0].z||b[0].z>a[1].z?!1:!0},cutByPlane:function(a){if(0==this.polygons.length)return new CSG;var b=a.normal.times(a.w),c=0;this.polygons.map(function(a){a.vertices.map(function(a){a=a.pos.distanceToSquared(b);a>c&&(c=a)})});var c=Math.sqrt(c),c=1.01*c,d=[],e=new CSG.OrthoNormalBasis(a);d.push(new CSG.Vertex(e.to3D(new CSG.Vector2D(c,-c))));d.push(new CSG.Vertex(e.to3D(new CSG.Vector2D(-c,-c))));d.push(new CSG.Vertex(e.to3D(new CSG.Vector2D(-c,c))));d.push(new CSG.Vertex(e.to3D(new CSG.Vector2D(c,
c))));a=(new CSG.Polygon(d,null,a.flipped())).extrude(a.normal.times(-c));a=this.intersect(a);a.properties=this.properties;return a},connectTo:function(a,b,c,d){a=a.getTransformationTo(b,c,d);return this.transform(a)},setShared:function(a){var b=this.polygons.map(function(b){return new CSG.Polygon(b.vertices,a,b.plane)}),b=CSG.fromPolygons(b);b.properties=this.properties;b.isRetesselated=this.isRetesselated;b.isCanonicalized=this.isCanonicalized;return b},setColor:function(a,b,c){a=new CSG.Polygon.Shared([a,
b,c]);return this.setShared(a)},toCompactBinary:function(){var a=this.canonicalized(),b=a.polygons.length,c=0,d=0,e={},f=[],g=0,h={},l=0,n=[],k=[],m={},j=0;a.polygons.map(function(a){a.vertices.map(function(a){++c;var b=a.getTag();b in e||(e[b]=d++,f.push(a))});var b=a.plane.getTag();b in h||(h[b]=g++,n.push(a.plane));b=a.shared.getTag();b in m||(m[b]=j++,k.push(a.shared))});for(var q=new Uint32Array(b),p=new Uint32Array(b),u=new Uint32Array(c),v=new Uint32Array(b),w=new Float64Array(3*d),r=new Float64Array(4*
g),s=0,l=0;l<b;++l){var t=a.polygons[l];q[l]=t.vertices.length;t.vertices.map(function(a){a=a.getTag();a=e[a];u[s++]=a});var y=t.plane.getTag();v[l]=h[y];t=t.shared.getTag();p[l]=m[t]}var x=0;f.map(function(a){a=a.pos;w[x++]=a._x;w[x++]=a._y;w[x++]=a._z});var z=0;n.map(function(a){var b=a.normal;r[z++]=b._x;r[z++]=b._y;r[z++]=b._z;r[z++]=a.w});return{clazz:"CSG",numPolygons:b,numVerticesPerPolygon:q,polygonPlaneIndexes:v,polygonSharedIndexes:p,polygonVertices:u,vertexData:w,planeData:r,shared:k}},
toPointCloud:function(a){var b=this.reTesselated(),c=new CSG,d={};b.polygons.map(function(a){a.vertices.map(function(a){d[a.getTag()]=a.pos})});for(vertextag in d)b=CSG.cube({center:d[vertextag],radius:a}),c=c.unionSub(b,!1,!1);return c=c.reTesselated()},getTransformationToFlatLying:function(){if(0==this.polygons.length)return new CSG.Matrix4x4;var a=this.canonicalized(),b={};a.polygons.map(function(a){b[a.plane.getTag()]=a.plane});var c=new CSG.Vector3D(1,0,0),d=new CSG.Vector3D(0,1,0),e=new CSG.Vector3D(0,
0,1),f=new CSG.Connector([0,0,0],[0,0,-1],c),g=new CSG.Connector([0,0,0],[0,0,-1],d),h=!0,l=0,n=0,k;for(planetag in b){var m=b[planetag],j=m.normal.times(m.w),q=m.normal.cross(c).length(),p=m.normal.cross(d).length();q>p?(j=new CSG.Connector(j,m.normal,c),j=j.getTransformationTo(f,!1,0)):(j=new CSG.Connector(j,m.normal,d),j=j.getTransformationTo(g,!1,0));q=a.transform(j);m=-m.normal.dot(e);q=q.getBounds();p=q[1].z-q[0].z;h||(p<l?h=!0:p==l&&m>n&&(h=!0));h&&(j=j.multiply(CSG.Matrix4x4.translation([-0.5*
(q[1].x+q[0].x),-0.5*(q[1].y+q[0].y),-q[0].z])),l=p,n=m,k=j);h=!1}return k},lieFlat:function(){var a=this.getTransformationToFlatLying();return this.transform(a)},projectToOrthoNormalBasis:function(a){var b=[];this.polygons.map(function(c){c=c.projectToOrthoNormalBasis(a);0<c.sides.length&&b.push(c)});return(new CAG).union(b)},sectionCut:function(a){var b=a.plane,c=a.plane.flipped(),b=new CSG.Plane(b.normal,b.w+1E-4),c=new CSG.Plane(c.normal,c.w+1E-4),b=this.cutByPlane(b),b=b.cutByPlane(c);return b.projectToOrthoNormalBasis(a)},
fixTJunctions:function(){for(var a=this.canonicalized(),b={},c=0;c<a.polygons.length;c++){var d=a.polygons[c],e=d.vertices.length;if(3<=e)for(var f=d.vertices[0],g=f.getTag(),h=0;h<e;h++){var l=h+1;l==e&&(l=0);var l=d.vertices[l],n=l.getTag(),k=g+"/"+n,g=n+"/"+g;g in b?(f=b[g],f.splice(-1,1),0==f.length&&delete b[g]):(f={vertex0:f,vertex1:l,polygonindex:c},k in b?b[k].push(f):b[k]=[f]);f=l;g=n}}var m={},j={},e={},f=!0;for(k in b)f=!1,e[k]=!0,b[k].map(function(a){var b=a.vertex0.getTag(),a=a.vertex1.getTag();
b in m?m[b].push(k):m[b]=[k];a in j?j[a].push(k):j[a]=[k]});if(!f){var h=a.polygons.slice(0),l=function(a,c,d){var e=a.getTag(),f=c.getTag();if(e==f)throw Error("Assertion failed");var g=e+"/"+f;if(f+"/"+e in b)return q(c,a,null),null;a={vertex0:a,vertex1:c,polygonindex:d};g in b?b[g].push(a):b[g]=[a];e in m?m[e].push(g):m[e]=[g];f in j?j[f].push(g):j[f]=[g];return g},q=function(a,c,d){var e=a.getTag(),f=c.getTag(),g=e+"/"+f;if(!(g in b))throw Error("Assertion failed");for(var h=-1,k=b[g],l=0;l<k.length;l++){var p=
k[l];if(p.vertex0==a&&p.vertex1==c&&!(null!==d&&p.polygonindex!=d)){h=l;break}}if(0>h)throw Error("Assertion failed");k.splice(h,1);0==k.length&&delete b[g];h=m[e].indexOf(g);if(0>h)throw Error("Assertion failed");m[e].splice(h,1);0==m[e].length&&delete m[e];h=j[f].indexOf(g);if(0>h)throw Error("Assertion failed");j[f].splice(h,1);0==j[f].length&&delete j[f]};for(;;){f=!0;for(k in b)f=!1,e[k]=!0;if(f)break;for(c=!1;;){f=null;for(k in e){f=k;break}if(null===f)break;d=!0;if(f in b){f=b[f];if(0==f.length)throw Error("Assertion failed");
for(var f=f[0],p=0;2>p;p++){var u=0==p?f.vertex0:f.vertex1,n=0==p?f.vertex1:f.vertex0,v=u.getTag(),w=n.getTag(),r=[];0==p?v in j&&(r=j[v]):v in m&&(r=m[v]);for(var s=0;s<r.length;s++){var g=b[r[s]][0],t=0==p?g.vertex0:g.vertex1,y=0==p?g.vertex1:g.vertex0,x=t.getTag();if(y.getTag()!=v)throw Error("Assertion failed");if(x==w){q(u,n,null);q(n,u,null);d=!1;p=2;c=!0;break}else{var y=u.pos,x=n.pos,t=t.pos.minus(y),z=x.minus(y).dot(t)/t.dot(t);if(0<z&&1>z&&1E-10>y.plus(t.times(z)).distanceToSquared(x)){c=
g.polygonindex;d=h[c];u=g.vertex1.getTag();p=-1;for(v=0;v<d.vertices.length;v++)if(d.vertices[v].getTag()==u){p=v;break}if(0>p)throw Error("Assertion failed");u=d.vertices.slice(0);u.splice(p,0,n);d=new CSG.Polygon(u,d.shared);h[c]=d;q(g.vertex0,g.vertex1,c);d=l(g.vertex0,n,c);n=l(n,g.vertex1,c);null!==d&&(e[d]=!0);null!==n&&(e[n]=!0);d=!1;p=2;c=!0;break}}}}}d&&delete e[k]}if(!c)break}f=CSG.fromPolygons(h);f.properties=a.properties;f.isCanonicalized=!0;f.isRetesselated=!0;a=f}f=!0;for(k in b){f=!1;
break}if(!f)throw Error("!sidemapisempty");return a}};CSG.parseOption=function(a,b,c){a&&b in a&&(c=a[b]);return c};CSG.parseOptionAs3DVector=function(a,b,c){a=CSG.parseOption(a,b,c);return a=new CSG.Vector3D(a)};CSG.parseOptionAs2DVector=function(a,b,c){a=CSG.parseOption(a,b,c);return a=new CSG.Vector2D(a)};CSG.parseOptionAsFloat=function(a,b,c){a=CSG.parseOption(a,b,c);if("string"==typeof a)a=Number(a);else if("number"!=typeof a)throw Error("Parameter "+b+" should be a number");return a};
CSG.parseOptionAsInt=function(a,b,c){a=CSG.parseOption(a,b,c);return Number(Math.floor(a))};CSG.parseOptionAsBool=function(a,b,c){a=CSG.parseOption(a,b,c);"string"==typeof a&&("true"==a&&(a=!0),"false"==a&&(a=!1),0==a&&(a=!1));return!!a};
CSG.cube=function(a){var b=CSG.parseOptionAs3DVector(a,"center",[0,0,0]),c=CSG.parseOptionAs3DVector(a,"radius",[1,1,1]),a=CSG.fromPolygons([[[0,4,6,2],[-1,0,0]],[[1,3,7,5],[1,0,0]],[[0,1,5,4],[0,-1,0]],[[2,6,7,3],[0,1,0]],[[0,2,3,1],[0,0,-1]],[[4,5,7,6],[0,0,1]]].map(function(a){new CSG.Vector3D(a[1]);a=a[0].map(function(a){a=new CSG.Vector3D(b.x+c.x*(2*!!(a&1)-1),b.y+c.y*(2*!!(a&2)-1),b.z+c.z*(2*!!(a&4)-1));return new CSG.Vertex(a)});return new CSG.Polygon(a,null)}));a.properties.cube=new CSG.Properties;
a.properties.cube.center=new CSG.Vector3D(b);a.properties.cube.facecenters=[new CSG.Connector((new CSG.Vector3D([c.x,0,0])).plus(b),[1,0,0],[0,0,1]),new CSG.Connector((new CSG.Vector3D([-c.x,0,0])).plus(b),[-1,0,0],[0,0,1]),new CSG.Connector((new CSG.Vector3D([0,c.y,0])).plus(b),[0,1,0],[0,0,1]),new CSG.Connector((new CSG.Vector3D([0,-c.y,0])).plus(b),[0,-1,0],[0,0,1]),new CSG.Connector((new CSG.Vector3D([0,0,c.z])).plus(b),[0,0,1],[1,0,0]),new CSG.Connector((new CSG.Vector3D([0,0,-c.z])).plus(b),
[0,0,-1],[1,0,0])];return a};
CSG.sphere=function(a){var a=a||{},b=CSG.parseOptionAs3DVector(a,"center",[0,0,0]),c=CSG.parseOptionAsFloat(a,"radius",1),d=CSG.parseOptionAsInt(a,"resolution",CSG.defaultResolution3D),e,f;"axes"in a?(e=a.axes[0].unit().times(c),f=a.axes[1].unit().times(c),a=a.axes[2].unit().times(c)):(e=(new CSG.Vector3D([1,0,0])).times(c),f=(new CSG.Vector3D([0,-1,0])).times(c),a=(new CSG.Vector3D([0,0,1])).times(c));4>d&&(d=4);for(var c=Math.round(d/4),g,h=[],l=0;l<=d;l++){var n=2*Math.PI*l/d,n=e.times(Math.cos(n)).plus(f.times(Math.sin(n)));
if(0<l)for(var k=[],m,j,q=0;q<=c;q++){var k=0.5*Math.PI*q/c,p=Math.cos(k),u=Math.sin(k);0<q&&(k=[],k.push(new CSG.Vertex(b.plus(g.times(m).minus(a.times(j))))),k.push(new CSG.Vertex(b.plus(n.times(m).minus(a.times(j))))),q<c&&k.push(new CSG.Vertex(b.plus(n.times(p).minus(a.times(u))))),k.push(new CSG.Vertex(b.plus(g.times(p).minus(a.times(u))))),h.push(new CSG.Polygon(k)),k=[],k.push(new CSG.Vertex(b.plus(g.times(m).plus(a.times(j))))),k.push(new CSG.Vertex(b.plus(n.times(m).plus(a.times(j))))),q<
c&&k.push(new CSG.Vertex(b.plus(n.times(p).plus(a.times(u))))),k.push(new CSG.Vertex(b.plus(g.times(p).plus(a.times(u))))),k.reverse(),h.push(new CSG.Polygon(k)));m=p;j=u}g=n}d=CSG.fromPolygons(h);d.properties.sphere=new CSG.Properties;d.properties.sphere.center=new CSG.Vector3D(b);d.properties.sphere.facepoint=b.plus(e);return d};
CSG.cylinder=function(a){function b(a,b,d){b=2*b*Math.PI;b=l.times(Math.cos(b)).plus(n.times(Math.sin(b)));a=c.plus(h.times(a)).plus(b.times(d));return new CSG.Vertex(a)}var c=CSG.parseOptionAs3DVector(a,"start",[0,-1,0]),d=CSG.parseOptionAs3DVector(a,"end",[0,1,0]),e=CSG.parseOptionAsFloat(a,"radius",1),f=CSG.parseOptionAsFloat(a,"radiusEnd",e),e=CSG.parseOptionAsFloat(a,"radiusStart",e);if(0>f||0>e)throw Error("Radius should be non-negative");if(0==f&&0==e)throw Error("Either radiusStart or radiusEnd should be positive");
for(var g=CSG.parseOptionAsFloat(a,"resolution",CSG.defaultResolution2D),h=d.minus(c),a=h.unit(),l=a.randomNonParallelVector().unit(),n=l.cross(a).unit(),k=new CSG.Vertex(c),m=new CSG.Vertex(d),j=[],q=0;q<g;q++){var p=q/g,u=(q+1)/g;f==e?(j.push(new CSG.Polygon([k,b(0,p,f),b(0,u,f)])),j.push(new CSG.Polygon([b(0,u,f),b(0,p,f),b(1,p,f),b(1,u,f)])),j.push(new CSG.Polygon([m,b(1,u,f),b(1,p,f)]))):(0<e&&(j.push(new CSG.Polygon([k,b(0,p,e),b(0,u,e)])),j.push(new CSG.Polygon([b(0,p,e),b(1,p,f),b(0,u,e)]))),
0<f&&(j.push(new CSG.Polygon([m,b(1,u,f),b(1,p,f)])),j.push(new CSG.Polygon([b(1,p,f),b(1,u,f),b(0,u,e)]))))}f=CSG.fromPolygons(j);f.properties.cylinder=new CSG.Properties;f.properties.cylinder.start=new CSG.Connector(c,a.negated(),l);f.properties.cylinder.end=new CSG.Connector(d,a,l);f.properties.cylinder.facepoint=c.plus(l.times(e));return f};
CSG.roundedCylinder=function(a){var b=CSG.parseOptionAs3DVector(a,"start",[0,-1,0]),c=CSG.parseOptionAs3DVector(a,"end",[0,1,0]),d=CSG.parseOptionAsFloat(a,"radius",1),e=c.minus(b),f;f=Math.abs(e.x)>Math.abs(e.y)?new CSG.Vector3D(0,1,0):new CSG.Vector3D(1,0,0);var g=CSG.parseOptionAs3DVector(a,"normal",f),a=CSG.parseOptionAsFloat(a,"resolution",CSG.defaultResolution3D);4>a&&(a=4);f=[];var h=Math.floor(0.25*a);if(1E-10>e.length())return CSG.sphere({center:b,radius:d,resolution:a});for(var l=e.unit().times(d),
e=l.cross(g).unit().times(d),d=e.cross(l).unit().times(d),n,g=0;g<=a;g++){var k=2*Math.PI*g/a,k=e.times(Math.cos(k)).plus(d.times(Math.sin(k)));if(0<g){var m=[];m.push(new CSG.Vertex(b.plus(k)));m.push(new CSG.Vertex(b.plus(n)));m.push(new CSG.Vertex(c.plus(n)));m.push(new CSG.Vertex(c.plus(k)));f.push(new CSG.Polygon(m));for(var j,q,p=0;p<=h;p++){var m=0.5*Math.PI*p/h,u=Math.cos(m),v=Math.sin(m);0<p&&(m=[],m.push(new CSG.Vertex(b.plus(n.times(j).minus(l.times(q))))),m.push(new CSG.Vertex(b.plus(k.times(j).minus(l.times(q))))),
p<h&&m.push(new CSG.Vertex(b.plus(k.times(u).minus(l.times(v))))),m.push(new CSG.Vertex(b.plus(n.times(u).minus(l.times(v))))),f.push(new CSG.Polygon(m)),m=[],m.push(new CSG.Vertex(c.plus(n.times(j).plus(l.times(q))))),m.push(new CSG.Vertex(c.plus(k.times(j).plus(l.times(q))))),p<h&&m.push(new CSG.Vertex(c.plus(k.times(u).plus(l.times(v))))),m.push(new CSG.Vertex(c.plus(n.times(u).plus(l.times(v))))),m.reverse(),f.push(new CSG.Polygon(m)));j=u;q=v}}n=k}n=CSG.fromPolygons(f);j=l.unit();q=e.unit();
n.properties.roundedCylinder=new CSG.Properties;n.properties.roundedCylinder.start=new CSG.Connector(b,j.negated(),q);n.properties.roundedCylinder.end=new CSG.Connector(c,j,q);n.properties.roundedCylinder.facepoint=b.plus(e);return n};
CSG.roundedCube=function(a){var b=CSG.parseOptionAs3DVector(a,"center",[0,0,0]),c=CSG.parseOptionAs3DVector(a,"radius",[1,1,1]),d=CSG.parseOptionAsFloat(a,"resolution",CSG.defaultResolution3D);4>d&&(d=4);var a=CSG.parseOptionAsFloat(a,"roundradius",0.2),e;e=c.minus(new CSG.Vector3D(a));for(var f=CSG.cube({center:b,radius:[c.x,e.y,e.z]}),f=f.unionSub(CSG.cube({center:b,radius:[e.x,c.y,e.z]}),!1,!1),f=f.unionSub(CSG.cube({center:b,radius:[e.x,e.y,c.z]}),!1,!1),g=0;2>g;g++){var h=e.z;1==g&&(h=-h);var l=
(new CSG.Vector3D(e.x,e.y,h)).plus(b),n=(new CSG.Vector3D(e.x,-e.y,h)).plus(b),k=(new CSG.Vector3D(-e.x,-e.y,h)).plus(b),m=(new CSG.Vector3D(-e.x,e.y,h)).plus(b),j=CSG.sphere({center:l,radius:a,resolution:d}),f=f.unionSub(j,!1,!1),j=CSG.sphere({center:n,radius:a,resolution:d}),f=f.unionSub(j,!1,!1),j=CSG.sphere({center:k,radius:a,resolution:d}),f=f.unionSub(j,!1,!1),j=CSG.sphere({center:m,radius:a,resolution:d}),f=f.unionSub(j,!1,!0),j=CSG.cylinder({start:l,end:n,radius:a,resolution:d}),f=f.unionSub(j,
!1,!1),j=CSG.cylinder({start:n,end:k,radius:a,resolution:d}),f=f.unionSub(j,!1,!1),j=CSG.cylinder({start:k,end:m,radius:a,resolution:d}),f=f.unionSub(j,!1,!1),j=CSG.cylinder({start:m,end:l,radius:a,resolution:d}),f=f.unionSub(j,!1,!1);0==g&&(h=new CSG.Vector3D(0,0,-2*h),j=CSG.cylinder({start:l,end:l.plus(h),radius:a,resolution:d}),f=f.unionSub(j),j=CSG.cylinder({start:n,end:n.plus(h),radius:a,resolution:d}),f=f.unionSub(j),j=CSG.cylinder({start:k,end:k.plus(h),radius:a,resolution:d}),f=f.unionSub(j),
j=CSG.cylinder({start:m,end:m.plus(h),radius:a,resolution:d}),f=f.unionSub(j,!1,!0))}f=f.reTesselated();f.properties.roundedCube=new CSG.Properties;f.properties.roundedCube.center=new CSG.Vertex(b);f.properties.roundedCube.facecenters=[new CSG.Connector((new CSG.Vector3D([c.x,0,0])).plus(b),[1,0,0],[0,0,1]),new CSG.Connector((new CSG.Vector3D([-c.x,0,0])).plus(b),[-1,0,0],[0,0,1]),new CSG.Connector((new CSG.Vector3D([0,c.y,0])).plus(b),[0,1,0],[0,0,1]),new CSG.Connector((new CSG.Vector3D([0,-c.y,
0])).plus(b),[0,-1,0],[0,0,1]),new CSG.Connector((new CSG.Vector3D([0,0,c.z])).plus(b),[0,0,1],[1,0,0]),new CSG.Connector((new CSG.Vector3D([0,0,-c.z])).plus(b),[0,0,-1],[1,0,0])];return f};CSG.IsFloat=function(a){return!isNaN(a)||Infinity===a||-Infinity===a};CSG.solve2Linear=function(a,b,c,d,e,f){var g=1/(a*d-b*c),b=(e*d-b*f)*g,a=(-e*c+a*f)*g;return[b,a]};
CSG.Vector3D=function(a,b,c){if(3==arguments.length)this._x=parseFloat(a),this._y=parseFloat(b),this._z=parseFloat(c);else if(2==arguments.length)this._x=parseFloat(a),this._y=parseFloat(b),this._z=0;else{var d=!0;if(1==arguments.length)if("object"==typeof a)a instanceof CSG.Vector3D?(this._x=a._x,this._y=a._y,this._z=a._z):a instanceof CSG.Vector2D?(this._x=a._x,this._y=a._y,this._z=0):a instanceof Array?2>a.length||3<a.length?d=!1:(this._x=parseFloat(a[0]),this._y=parseFloat(a[1]),this._z=3==a.length?
parseFloat(a[2]):0):"x"in a&&"y"in a?(this._x=parseFloat(a.x),this._y=parseFloat(a.y),this._z="z"in a?parseFloat(a.z):0):d=!1;else{var e=parseFloat(a);this._z=this._y=this._x=e}else d=!1;if(d&&(!CSG.IsFloat(this._x)||!CSG.IsFloat(this._y)||!CSG.IsFloat(this._z)))d=!1;if(!d)throw Error("wrong arguments");}};
CSG.Vector3D.prototype={get x(){return this._x},get y(){return this._y},get z(){return this._z},set x(a){throw Error("Vector3D is immutable");},set y(a){throw Error("Vector3D is immutable");},set z(a){throw Error("Vector3D is immutable");},clone:function(){return new CSG.Vector3D(this)},negated:function(){return new CSG.Vector3D(-this._x,-this._y,-this._z)},abs:function(){return new CSG.Vector3D(Math.abs(this._x),Math.abs(this._y),Math.abs(this._z))},plus:function(a){return new CSG.Vector3D(this._x+
a._x,this._y+a._y,this._z+a._z)},minus:function(a){return new CSG.Vector3D(this._x-a._x,this._y-a._y,this._z-a._z)},times:function(a){return new CSG.Vector3D(this._x*a,this._y*a,this._z*a)},dividedBy:function(a){return new CSG.Vector3D(this._x/a,this._y/a,this._z/a)},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z},lerp:function(a,b){return this.plus(a.minus(this).times(b))},lengthSquared:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSquared())},unit:function(){return this.dividedBy(this.length())},
cross:function(a){return new CSG.Vector3D(this._y*a._z-this._z*a._y,this._z*a._x-this._x*a._z,this._x*a._y-this._y*a._x)},distanceTo:function(a){return this.minus(a).length()},distanceToSquared:function(a){return this.minus(a).lengthSquared()},equals:function(a){return this._x==a._x&&this._y==a._y&&this._z==a._z},multiply4x4:function(a){return a.leftMultiply1x3Vector(this)},transform:function(a){return a.leftMultiply1x3Vector(this)},toStlString:function(){return this._x+" "+this._y+" "+this._z},toString:function(){return"("+
this._x+", "+this._y+", "+this._z+")"},randomNonParallelVector:function(){var a=this.abs();return a._x<=a._y&&a._x<=a._z?new CSG.Vector3D(1,0,0):a._y<=a._x&&a._y<=a._z?new CSG.Vector3D(0,1,0):new CSG.Vector3D(0,0,1)},min:function(a){return new CSG.Vector3D(Math.min(this._x,a._x),Math.min(this._y,a._y),Math.min(this._z,a._z))},max:function(a){return new CSG.Vector3D(Math.max(this._x,a._x),Math.max(this._y,a._y),Math.max(this._z,a._z))}};CSG.Vertex=function(a){this.pos=a};
CSG.Vertex.fromObject=function(a){a=new CSG.Vector3D(a.pos);return new CSG.Vertex(a)};CSG.Vertex.prototype={flipped:function(){return this},getTag:function(){var a=this.tag;a||(this.tag=a=CSG.getTag());return a},interpolate:function(a,b){var c=this.pos.lerp(a.pos,b);return new CSG.Vertex(c)},transform:function(a){a=this.pos.multiply4x4(a);return new CSG.Vertex(a)},toStlString:function(){return"vertex "+this.pos.toStlString()+"\n"},toString:function(){return this.pos.toString()}};
CSG.Plane=function(a,b){this.normal=a;this.w=b};CSG.Plane.fromObject=function(a){var b=new CSG.Vector3D(a.normal),a=parseFloat(a.w);return new CSG.Plane(b,a)};CSG.Plane.EPSILON=1E-5;CSG.Plane.fromVector3Ds=function(a,b,c){b=b.minus(a).cross(c.minus(a)).unit();return new CSG.Plane(b,b.dot(a))};
CSG.Plane.anyPlaneFromVector3Ds=function(a,b,c){b=b.minus(a);c=c.minus(a);1E-5>b.length()&&(b=c.randomNonParallelVector());1E-5>c.length()&&(c=b.randomNonParallelVector());c=b.cross(c);1E-5>c.length()&&(c=b.randomNonParallelVector(),c=b.cross(c));c=c.unit();return new CSG.Plane(c,c.dot(a))};CSG.Plane.fromPoints=function(a,b,c){a=new CSG.Vector3D(a);b=new CSG.Vector3D(b);c=new CSG.Vector3D(c);return CSG.Plane.fromVector3Ds(a,b,c)};
CSG.Plane.fromNormalAndPoint=function(a,b){var a=new CSG.Vector3D(a),b=new CSG.Vector3D(b),a=a.unit(),c=b.dot(a);return new CSG.Plane(a,c)};
CSG.Plane.prototype={flipped:function(){return new CSG.Plane(this.normal.negated(),-this.w)},getTag:function(){var a=this.tag;a||(this.tag=a=CSG.getTag());return a},equals:function(a){return this.normal.equals(a.normal)&&this.w==a.w},transform:function(a){var b=a.isMirroring(),c=this.normal.randomNonParallelVector(),d=this.normal.cross(c),e=this.normal.cross(d),c=this.normal.times(this.w),d=c.plus(d),e=c.plus(e),c=c.multiply4x4(a),d=d.multiply4x4(a),e=e.multiply4x4(a),a=CSG.Plane.fromVector3Ds(c,
d,e);b&&(a=a.flipped());return a},splitPolygon:function(a){var b={type:null,front:null,back:null},c=this.normal,d=a.vertices,e=d.length;if(a.plane.equals(this))b.type=0;else{for(var f=CSG.Plane.EPSILON,g=this.w,h=!1,l=!1,n=[],k=-f,m=0;m<e;m++){var j=c.dot(d[m].pos)-g,q=0>j;n.push(q);j>f&&(h=!0);j<k&&(l=!0)}if(!h&&!l)j=c.dot(a.plane.normal),b.type=0<=j?0:1;else if(l)if(h){b.type=4;c=[];f=[];q=n[0];for(g=0;g<e;g++)h=d[g],k=g+1,k>=e&&(k=0),l=n[k],q==l?q?f.push(h):c.push(h):(k=this.splitLineBetweenPoints(h.pos,
d[k].pos),k=new CSG.Vertex(k),q?(f.push(h),f.push(k),c.push(k)):(c.push(h),c.push(k),f.push(k))),q=l;d=CSG.Plane.EPSILON*CSG.Plane.EPSILON;if(3<=f.length){e=f[f.length-1];for(g=0;g<f.length;g++)h=f[g],h.pos.distanceToSquared(e.pos)<d&&(f.splice(g,1),g--),e=h}if(3<=c.length){e=c[c.length-1];for(g=0;g<c.length;g++)h=c[g],h.pos.distanceToSquared(e.pos)<d&&(c.splice(g,1),g--),e=h}3<=c.length&&(b.front=new CSG.Polygon(c,a.shared,a.plane));3<=f.length&&(b.back=new CSG.Polygon(f,a.shared,a.plane))}else b.type=
3;else b.type=2}return b},splitLineBetweenPoints:function(a,b){var c=b.minus(a),d=(this.w-this.normal.dot(a))/this.normal.dot(c);isNaN(d)&&(d=0);1<d&&(d=1);0>d&&(d=0);return a.plus(c.times(d))},intersectWithLine:function(a){return a.intersectWithPlane(this)},intersectWithPlane:function(a){return CSG.Line3D.fromPlanes(this,a)},signedDistanceToPoint:function(a){return this.normal.dot(a)-this.w},toString:function(){return"[normal: "+this.normal.toString()+", w: "+this.w+"]"},mirrorPoint:function(a){var b=
this.signedDistanceToPoint(a);return a.minus(this.normal.times(2*b))}};CSG.Polygon=function(a,b,c){this.vertices=a;b||(b=CSG.Polygon.defaultShared);this.shared=b;this.plane=3<=arguments.length?c:CSG.Plane.fromVector3Ds(a[0].pos,a[1].pos,a[2].pos);_CSGDEBUG&&this.checkIfConvex()};CSG.Polygon.fromObject=function(a){var b=a.vertices.map(function(a){return CSG.Vertex.fromObject(a)}),c=CSG.Polygon.Shared.fromObject(a.shared),a=CSG.Plane.fromObject(a.plane);return new CSG.Polygon(b,c,a)};
CSG.Polygon.prototype={checkIfConvex:function(){if(!CSG.Polygon.verticesConvex(this.vertices,this.plane.normal))throw CSG.Polygon.verticesConvex(this.vertices,this.plane.normal),Error("Not convex!");},extrude:function(a){var b=[],c=this;0<c.plane.normal.dot(a)&&(c=c.flipped());b.push(c);for(var a=c.translate(a),d=this.vertices.length,e=0;e<d;e++){var f=[],g=e<d-1?e+1:0;f.push(c.vertices[e].pos);f.push(a.vertices[e].pos);f.push(a.vertices[g].pos);f.push(c.vertices[g].pos);f=CSG.Polygon.createFromPoints(f,
this.shared);b.push(f)}a=a.flipped();b.push(a);return CSG.fromPolygons(b)},translate:function(a){return this.transform(CSG.Matrix4x4.translation(a))},boundingSphere:function(){if(!this.cachedBoundingSphere){var a=this.boundingBox(),b=a[0].plus(a[1]).times(0.5),a=a[1].minus(b).length();this.cachedBoundingSphere=[b,a]}return this.cachedBoundingSphere},boundingBox:function(){if(!this.cachedBoundingBox){var a,b,c=this.vertices,d=c.length;b=a=0==d?new CSG.Vector3D(0,0,0):c[0].pos;for(var e=1;e<d;e++){var f=
c[e].pos;a=a.min(f);b=b.max(f)}this.cachedBoundingBox=[a,b]}return this.cachedBoundingBox},flipped:function(){var a=this.vertices.map(function(a){return a.flipped()});a.reverse();var b=this.plane.flipped();return new CSG.Polygon(a,this.shared,b)},transform:function(a){var b=this.vertices.map(function(b){return b.transform(a)}),c=this.plane.transform(a);0>a.elements[0]*a.elements[5]*a.elements[10]&&b.reverse();return new CSG.Polygon(b,this.shared,c)},toStlString:function(){var a="";if(3<=this.vertices.length)for(var b=
this.vertices[0].toStlString(),c=0;c<this.vertices.length-2;c++)a+="facet normal "+this.plane.normal.toStlString()+"\nouter loop\n",a+=b,a+=this.vertices[c+1].toStlString(),a+=this.vertices[c+2].toStlString(),a+="endloop\nendfacet\n";return a},toString:function(){var a="Polygon plane: "+this.plane.toString()+"\n";this.vertices.map(function(b){a+="  "+b.toString()+"\n"});return a},projectToOrthoNormalBasis:function(a){var b=this.vertices.map(function(b){return a.to2D(b.pos)}),b=CAG.fromPointsNoCheck(b),
c=b.area();1E-5>Math.abs(c)?b=new CAG:0>c&&(b=b.flipped());return b}};CSG.Polygon.verticesConvex=function(a,b){var c=a.length;if(2<c)for(var d=a[c-2].pos,e=a[c-1].pos,f=0;f<c;f++){var g=a[f].pos;if(!CSG.Polygon.isConvexPoint(d,e,g,b))return!1;d=e;e=g}return!0};CSG.Polygon.createFromPoints=function(a,b,c){3>arguments.length&&new CSG.Vector3D(0,0,0);var d=[];a.map(function(a){a=new CSG.Vector3D(a);a=new CSG.Vertex(a);d.push(a)});return 3>arguments.length?new CSG.Polygon(d,b):new CSG.Polygon(d,b,c)};
CSG.Polygon.isConvexPoint=function(a,b,c,d){return 0<=b.minus(a).cross(c.minus(b)).dot(d)};CSG.Polygon.isStrictlyConvexPoint=function(a,b,c,d){return 1E-5<=b.minus(a).cross(c.minus(b)).dot(d)};CSG.Polygon.Shared=function(a){this.color=a};CSG.Polygon.Shared.fromObject=function(a){return new CSG.Polygon.Shared(a.color)};
CSG.Polygon.Shared.prototype={getTag:function(){var a=this.tag;a||(this.tag=a=CSG.getTag());return a},getHash:function(){return!this.color?"null":""+this.color[0]+"/"+this.color[1]+"/"+this.color[2]}};CSG.Polygon.defaultShared=new CSG.Polygon.Shared(null);CSG.PolygonTreeNode=function(){this.parent=null;this.children=[];this.polygon=null;this.removed=!1};
CSG.PolygonTreeNode.prototype={addPolygons:function(a){if(!this.isRootNode())throw Error("Assertion failed");var b=this;a.map(function(a){b.addChild(a)})},remove:function(){if(!this.removed){this.removed=!0;if(_CSGDEBUG){if(this.isRootNode())throw Error("Assertion failed");if(this.children.length)throw Error("Assertion failed");}var a=this.parent.children,b=a.indexOf(this);if(0>b)throw Error("Assertion failed");a.splice(b,1);this.parent.recursivelyInvalidatePolygon()}},isRemoved:function(){return this.removed},
isRootNode:function(){return!this.parent},invert:function(){if(!this.isRootNode())throw Error("Assertion failed");this.invertSub()},getPolygon:function(){if(!this.polygon)throw Error("Assertion failed");return this.polygon},getPolygons:function(a){if(this.polygon)a.push(this.polygon);else{var b=[];this.children.map(function(a){a.getPolygons(b)});b.map(function(b){a.push(b)})}},splitByPlane:function(a,b,c,d,e){var f=this.children,g=f.length;if(0<g)for(var h=0;h<g;h++)f[h].splitByPlane(a,b,c,d,e);else if(f=
this.polygon)if(h=f.boundingSphere(),g=h[1]+1E-4,h=a.normal.dot(h[0])-a.w,h>g)d.push(this);else if(h<-g)e.push(this);else switch(a=a.splitPolygon(f),a.type){case 0:b.push(this);break;case 1:c.push(this);break;case 2:d.push(this);break;case 3:e.push(this);break;case 4:a.front&&(b=this.addChild(a.front),d.push(b)),a.back&&(d=this.addChild(a.back),e.push(d))}},addChild:function(a){var b=new CSG.PolygonTreeNode;b.parent=this;b.polygon=a;this.children.push(b);return b},invertSub:function(){this.polygon&&
(this.polygon=this.polygon.flipped());this.children.map(function(a){a.invertSub()})},recursivelyInvalidatePolygon:function(){this.polygon&&(this.polygon=null,this.parent&&this.parent.recursivelyInvalidatePolygon())}};CSG.Tree=function(a){this.polygonTree=new CSG.PolygonTreeNode;this.rootnode=new CSG.Node(null);a&&this.addPolygons(a)};
CSG.Tree.prototype={invert:function(){this.polygonTree.invert();this.rootnode.invert()},clipTo:function(a,b){this.rootnode.clipTo(a,b?!0:!1)},allPolygons:function(){var a=[];this.polygonTree.getPolygons(a);return a},addPolygons:function(a){var b=this,a=a.map(function(a){return b.polygonTree.addChild(a)});this.rootnode.addPolygonTreeNodes(a)}};CSG.Node=function(a){this.back=this.front=this.plane=null;this.polygontreenodes=[];this.parent=a};
CSG.Node.prototype={invert:function(){this.plane&&(this.plane=this.plane.flipped());this.front&&this.front.invert();this.back&&this.back.invert();var a=this.front;this.front=this.back;this.back=a},clipPolygons:function(a,b){if(this.plane){var c=[],d=[],e=b?c:d,f=this.plane,g=a.length;for(i=0;i<g;i++){var h=a[i];h.isRemoved()||h.splitByPlane(f,e,c,d,c)}this.front&&0<d.length&&this.front.clipPolygons(d,b);d=c.length;if(this.back&&0<d)this.back.clipPolygons(c,b);else for(i=0;i<d;i++)c[i].remove()}},
clipTo:function(a,b){0<this.polygontreenodes.length&&a.rootnode.clipPolygons(this.polygontreenodes,b);this.front&&this.front.clipTo(a,b);this.back&&this.back.clipTo(a,b)},addPolygonTreeNodes:function(a){if(0!=a.length){var b=this;this.plane||(this.plane=a[0].getPolygon().plane);var c=[],d=[];a.map(function(a){a.splitByPlane(b.plane,b.polygontreenodes,d,c,d)});0<c.length&&(this.front||(this.front=new CSG.Node(this)),this.front.addPolygonTreeNodes(c));0<d.length&&(this.back||(this.back=new CSG.Node(this)),
this.back.addPolygonTreeNodes(d))}},getParentPlaneNormals:function(a,b){0<b&&this.parent&&(a.push(this.parent.plane.normal),this.parent.getParentPlaneNormals(a,b-1))}};CSG.Matrix4x4=function(a){this.elements=1<=arguments.length?a:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]};
CSG.Matrix4x4.prototype={plus:function(a){for(var b=[],c=0;16>c;c++)b[c]=this.elements[c]+a.elements[c];return new CSG.Matrix4x4(b)},minus:function(a){for(var b=[],c=0;16>c;c++)b[c]=this.elements[c]-a.elements[c];return new CSG.Matrix4x4(b)},multiply:function(a){var b=this.elements[0],c=this.elements[1],d=this.elements[2],e=this.elements[3],f=this.elements[4],g=this.elements[5],h=this.elements[6],l=this.elements[7],n=this.elements[8],k=this.elements[9],m=this.elements[10],j=this.elements[11],q=this.elements[12],
p=this.elements[13],u=this.elements[14],v=this.elements[15],w=a.elements[0],r=a.elements[1],s=a.elements[2],t=a.elements[3],y=a.elements[4],x=a.elements[5],z=a.elements[6],A=a.elements[7],C=a.elements[8],D=a.elements[9],F=a.elements[10],E=a.elements[11],G=a.elements[12],H=a.elements[13],I=a.elements[14],a=a.elements[15],B=[];B[0]=b*w+c*y+d*C+e*G;B[1]=b*r+c*x+d*D+e*H;B[2]=b*s+c*z+d*F+e*I;B[3]=b*t+c*A+d*E+e*a;B[4]=f*w+g*y+h*C+l*G;B[5]=f*r+g*x+h*D+l*H;B[6]=f*s+g*z+h*F+l*I;B[7]=f*t+g*A+h*E+l*a;B[8]=n*
w+k*y+m*C+j*G;B[9]=n*r+k*x+m*D+j*H;B[10]=n*s+k*z+m*F+j*I;B[11]=n*t+k*A+m*E+j*a;B[12]=q*w+p*y+u*C+v*G;B[13]=q*r+p*x+u*D+v*H;B[14]=q*s+p*z+u*F+v*I;B[15]=q*t+p*A+u*E+v*a;return new CSG.Matrix4x4(B)},clone:function(){var a=this.elements.map(function(a){return a});return new CSG.Matrix4x4(a)},rightMultiply1x3Vector:function(a){var b=a._x,c=a._y,d=a._z,a=b*this.elements[0]+c*this.elements[1]+d*this.elements[2]+1*this.elements[3],e=b*this.elements[4]+c*this.elements[5]+d*this.elements[6]+1*this.elements[7],
f=b*this.elements[8]+c*this.elements[9]+d*this.elements[10]+1*this.elements[11],b=b*this.elements[12]+c*this.elements[13]+d*this.elements[14]+1*this.elements[15];1!=b&&(b=1/b,a*=b,e*=b,f*=b);return new CSG.Vector3D(a,e,f)},leftMultiply1x3Vector:function(a){var b=a._x,c=a._y,d=a._z,a=b*this.elements[0]+c*this.elements[4]+d*this.elements[8]+1*this.elements[12],e=b*this.elements[1]+c*this.elements[5]+d*this.elements[9]+1*this.elements[13],f=b*this.elements[2]+c*this.elements[6]+d*this.elements[10]+1*
this.elements[14],b=b*this.elements[3]+c*this.elements[7]+d*this.elements[11]+1*this.elements[15];1!=b&&(b=1/b,a*=b,e*=b,f*=b);return new CSG.Vector3D(a,e,f)},rightMultiply1x2Vector:function(a){var b=a.x,c=a.y,a=b*this.elements[0]+c*this.elements[1]+0*this.elements[2]+1*this.elements[3],d=b*this.elements[4]+c*this.elements[5]+0*this.elements[6]+1*this.elements[7],b=b*this.elements[12]+c*this.elements[13]+0*this.elements[14]+1*this.elements[15];1!=b&&(b=1/b,a*=b,d*=b);return new CSG.Vector2D(a,d)},
leftMultiply1x2Vector:function(a){var b=a.x,c=a.y,a=b*this.elements[0]+c*this.elements[4]+0*this.elements[8]+1*this.elements[12],d=b*this.elements[1]+c*this.elements[5]+0*this.elements[9]+1*this.elements[13],b=b*this.elements[3]+c*this.elements[7]+0*this.elements[11]+1*this.elements[15];1!=b&&(b=1/b,a*=b,d*=b);return new CSG.Vector2D(a,d)},isMirroring:function(){var a=new CSG.Vector3D(this.elements[0],this.elements[4],this.elements[8]),b=new CSG.Vector3D(this.elements[1],this.elements[5],this.elements[9]),
c=new CSG.Vector3D(this.elements[2],this.elements[6],this.elements[10]);return 0>a.cross(b).dot(c)}};CSG.Matrix4x4.unity=function(){return new CSG.Matrix4x4};CSG.Matrix4x4.rotationX=function(a){var b=a*Math.PI*(1/180),a=Math.cos(b),b=Math.sin(b);return new CSG.Matrix4x4([1,0,0,0,0,a,b,0,0,-b,a,0,0,0,0,1])};CSG.Matrix4x4.rotationY=function(a){var b=a*Math.PI*(1/180),a=Math.cos(b),b=Math.sin(b);return new CSG.Matrix4x4([a,0,-b,0,0,1,0,0,b,0,a,0,0,0,0,1])};
CSG.Matrix4x4.rotationZ=function(a){var b=a*Math.PI*(1/180),a=Math.cos(b),b=Math.sin(b);return new CSG.Matrix4x4([a,b,0,0,-b,a,0,0,0,0,1,0,0,0,0,1])};CSG.Matrix4x4.rotation=function(a,b,c){var a=new CSG.Vector3D(a),b=new CSG.Vector3D(b),b=CSG.Plane.fromNormalAndPoint(b,a),b=new CSG.OrthoNormalBasis(b),d=CSG.Matrix4x4.translation(a.negated()),d=d.multiply(b.getProjectionMatrix()),d=d.multiply(CSG.Matrix4x4.rotationZ(c)),d=d.multiply(b.getInverseProjectionMatrix());return d=d.multiply(CSG.Matrix4x4.translation(a))};
CSG.Matrix4x4.translation=function(a){a=new CSG.Vector3D(a);return new CSG.Matrix4x4([1,0,0,0,0,1,0,0,0,0,1,0,a.x,a.y,a.z,1])};CSG.Matrix4x4.mirroring=function(a){var b=a.normal.x,c=a.normal.y,d=a.normal.z,a=a.w;return new CSG.Matrix4x4([1-2*b*b,-2*c*b,-2*d*b,0,-2*b*c,1-2*c*c,-2*d*c,0,-2*b*d,-2*c*d,1-2*d*d,0,-2*b*a,-2*c*a,-2*d*a,1])};CSG.Matrix4x4.scaling=function(a){a=new CSG.Vector3D(a);return new CSG.Matrix4x4([a.x,0,0,0,0,a.y,0,0,0,0,a.z,0,0,0,0,1])};
CSG.Vector2D=function(a,b){if(2==arguments.length)this._x=parseFloat(a),this._y=parseFloat(b);else{var c=!0;if(1==arguments.length)if("object"==typeof a)a instanceof CSG.Vector2D?(this._x=a._x,this._y=a._y):a instanceof Array?(this._x=parseFloat(a[0]),this._y=parseFloat(a[1])):"x"in a&&"y"in a?(this._x=parseFloat(a.x),this._y=parseFloat(a.y)):c=!1;else{var d=parseFloat(a);this._y=this._x=d}else c=!1;if(c&&(!CSG.IsFloat(this._x)||!CSG.IsFloat(this._y)))c=!1;if(!c)throw Error("wrong arguments");}};
CSG.Vector2D.fromAngle=function(a){return CSG.Vector2D.fromAngleRadians(a)};CSG.Vector2D.fromAngleDegrees=function(a){return CSG.Vector2D.fromAngleRadians(Math.PI*a/180)};CSG.Vector2D.fromAngleRadians=function(a){return new CSG.Vector2D(Math.cos(a),Math.sin(a))};
CSG.Vector2D.prototype={get x(){return this._x},get y(){return this._y},set x(a){throw Error("Vector2D is immutable");},set y(a){throw Error("Vector2D is immutable");},toVector3D:function(a){return new CSG.Vector3D(this._x,this._y,a)},equals:function(a){return this._x==a._x&&this._y==a._y},clone:function(){return new CSG.Vector2D(this._x,this._y)},negated:function(){return new CSG.Vector2D(-this._x,-this._y)},plus:function(a){return new CSG.Vector2D(this._x+a._x,this._y+a._y)},minus:function(a){return new CSG.Vector2D(this._x-
a._x,this._y-a._y)},times:function(a){return new CSG.Vector2D(this._x*a,this._y*a)},dividedBy:function(a){return new CSG.Vector2D(this._x/a,this._y/a)},dot:function(a){return this._x*a._x+this._y*a._y},lerp:function(a,b){return this.plus(a.minus(this).times(b))},length:function(){return Math.sqrt(this.dot(this))},distanceTo:function(a){return this.minus(a).length()},distanceToSquared:function(a){return this.minus(a).lengthSquared()},lengthSquared:function(){return this.dot(this)},unit:function(){return this.dividedBy(this.length())},
cross:function(a){return this._x*a._y-this._y*a._x},normal:function(){return new CSG.Vector2D(this._y,-this._x)},multiply4x4:function(a){return a.leftMultiply1x2Vector(this)},transform:function(a){return a.leftMultiply1x2Vector(this)},angle:function(){return this.angleRadians()},angleDegrees:function(){return 180*this.angleRadians()/Math.PI},angleRadians:function(){return Math.atan2(this._y,this._x)},min:function(a){return new CSG.Vector2D(Math.min(this._x,a._x),Math.min(this._y,a._y))},max:function(a){return new CSG.Vector2D(Math.max(this._x,
a._x),Math.max(this._y,a._y))},toString:function(){return"("+this._x+", "+this._y+")"}};CSG.Line2D=function(a,b){var a=new CSG.Vector2D(a),b=parseFloat(b),c=a.length(),b=b*c;this.normal=a=a.times(1/c);this.w=b};CSG.Line2D.fromPoints=function(a,b){var a=new CSG.Vector2D(a),b=new CSG.Vector2D(b),c=b.minus(a).normal().negated().unit(),d=a.dot(c);return new CSG.Line2D(c,d)};
CSG.Line2D.prototype={reverse:function(){return new CSG.Line2D(this.normal.negated(),-this.w)},equals:function(a){return a.normal.equals(this.normal)&&a.w==this.w},origin:function(){return this.normal.times(this.w)},direction:function(){return this.normal.normal()},xAtY:function(a){return(this.w-this.normal._y*a)/this.normal.x},absDistanceToPoint:function(a){a=new CSG.Vector2D(a);a=a.dot(this.normal);return Math.abs(a-this.w)},closestPoint:function(a){a=new CSG.Vector2D(a);a=a.dot(this.direction());
return origin.plus(a)},intersectWithLine:function(a){a=CSG.solve2Linear(this.normal.x,this.normal.y,a.normal.x,a.normal.y,this.w,a.w);return a=new CSG.Vector2D(a)},transform:function(a){var b=new CSG.Vector2D(0,0),c=this.normal.times(this.w),b=b.multiply4x4(a),b=this.normal.multiply4x4(a).minus(b),a=c.multiply4x4(a),a=b.dot(a);return new CSG.Line2D(b,a)}};CSG.Line3D=function(a,b){a=new CSG.Vector3D(a);b=new CSG.Vector3D(b);this.point=a;this.direction=b.unit()};
CSG.Line3D.fromPoints=function(a,b){var a=new CSG.Vector3D(a),b=new CSG.Vector3D(b),c=b.minus(a).unit();return new CSG.Line3D(a,c)};
CSG.Line3D.fromPlanes=function(a,b){var c=a.normal.cross(b.normal),d=c.length();if(1E-10>d)throw Error("Parallel planes");var c=c.times(1/d),d=Math.abs(c.x),e=Math.abs(c.y),f=Math.abs(c.z);d>=e&&d>=f?(d=CSG.solve2Linear(a.normal.y,a.normal.z,b.normal.y,b.normal.z,a.w,b.w),d=new CSG.Vector3D(0,d[0],d[1])):e>=d&&e>=f?(d=CSG.solve2Linear(a.normal.x,a.normal.z,b.normal.x,b.normal.z,a.w,b.w),d=new CSG.Vector3D(d[0],0,d[1])):(d=CSG.solve2Linear(a.normal.x,a.normal.y,b.normal.x,b.normal.y,a.w,b.w),d=new CSG.Vector3D(d[0],
d[1],0));return new CSG.Line3D(d,c)};
CSG.Line3D.prototype={intersectWithPlane:function(a){a=(a.w-a.normal.dot(this.point))/a.normal.dot(this.direction);return this.point.plus(this.direction.times(a))},clone:function(){return new CSG.Line3D(this.point.clone(),this.direction.clone())},reverse:function(){return new CSG.Line3D(this.point.clone(),this.direction.negated())},transform:function(a){var b=this.point.multiply4x4(a),a=this.point.plus(this.direction).multiply4x4(a).minus(b);return new CSG.Line3D(b,a)},closestPointOnLine:function(a){a=
new CSG.Vector3D(a);a=a.minus(this.point).dot(this.direction)/this.direction.dot(this.direction);return this.point.plus(this.direction.times(a))},distanceToPoint:function(a){var a=new CSG.Vector3D(a),b=this.closestPointOnLine(a);return a.minus(b).length()},equals:function(a){return!this.direction.equals(a.direction)||1E-8<this.distanceToPoint(a.point)?!1:!0}};
CSG.OrthoNormalBasis=function(a,b){b=2>arguments.length?a.normal.randomNonParallelVector():new CSG.Vector3D(b);this.v=a.normal.cross(b).unit();this.u=this.v.cross(a.normal);this.plane=a;this.planeorigin=a.normal.times(a.w)};CSG.OrthoNormalBasis.Z0Plane=function(){var a=new CSG.Plane(new CSG.Vector3D([0,0,1]),0);return new CSG.OrthoNormalBasis(a,new CSG.Vector3D([1,0,0]))};
CSG.OrthoNormalBasis.prototype={getProjectionMatrix:function(){return new CSG.Matrix4x4([this.u.x,this.v.x,this.plane.normal.x,0,this.u.y,this.v.y,this.plane.normal.y,0,this.u.z,this.v.z,this.plane.normal.z,0,0,0,-this.plane.w,1])},getInverseProjectionMatrix:function(){var a=this.plane.normal.times(this.plane.w);return new CSG.Matrix4x4([this.u.x,this.u.y,this.u.z,0,this.v.x,this.v.y,this.v.z,0,this.plane.normal.x,this.plane.normal.y,this.plane.normal.z,0,a.x,a.y,a.z,1])},to2D:function(a){return new CSG.Vector2D(a.dot(this.u),
a.dot(this.v))},to3D:function(a){return this.planeorigin.plus(this.u.times(a.x)).plus(this.v.times(a.y))},line3Dto2D:function(a){var b=a.point,a=a.direction.plus(b),b=this.to2D(b),a=this.to2D(a);return CSG.Line2D.fromPoints(b,a)},line2Dto3D:function(a){var b=a.origin(),a=a.direction().plus(b),b=this.to3D(b),a=this.to3D(a);return CSG.Line3D.fromPoints(b,a)},transform:function(a){var b=this.plane.transform(a),c=this.u.transform(a),a=(new CSG.Vector3D(0,0,0)).transform(a),c=c.minus(a);return new CSG.OrthoNormalBasis(b,
c)}};function insertSorted(a,b,c){for(var d=0,e=a.length;e>d;){var f=Math.floor((d+e)/2);0<c(b,a[f])?d=f+1:e=f}a.splice(d,0,b)}CSG.interpolateBetween2DPointsForY=function(a,b,c){var c=c-a.y,d=b.y-a.y;0>d&&(c=-c,d=-d);return a.x+(0>=c?0:c>=d?1:1E-10>d?0.5:c/d)*(b.x-a.x)};
CSG.reTesselateCoplanarPolygons=function(a,b){var c=a.length;if(0<c){for(var d=a[0].plane,e=a[0].shared,f=new CSG.OrthoNormalBasis(d),g=[],h=[],l={},n={},k={},m=10*(1/1E-5),j=0;j<c;j++){var q=a[j],p=[],u=q.vertices.length,v=-1;if(0<u){for(var w,r,s=0;s<u;s++){var t=f.to2D(q.vertices[s].pos),y=Math.floor(t.y*m),x;y in k?x=k[y]:y+1 in k?x=k[y+1]:y-1 in k?x=k[y-1]:(x=t.y,k[y]=t.y);t=new CSG.Vector2D(t.x,x);p.push(t);t=t.y;if(0==s||t<w)w=t,v=s;if(0==s||t>r)r=t;t in n||(n[t]={});n[t][j]=!0}w>=r?p=[]:(w in
l||(l[w]=[]),l[w].push(j))}p.reverse();v=u-v-1;g.push(p);h.push(v)}var c=[],z;for(z in n)c.push(z);c.sort(function(a,b){return a-b});k=[];m=[];for(q=0;q<c.length;q++){v=[];y=c[q];z=Number(y);w=n[y];for(x=0;x<k.length;++x)if(s=k[x],j=s.polygonindex,w[j]){for(var p=g[j],u=p.length,j=s.leftvertexindex,A=s.rightvertexindex;;){r=j+1;r>=u&&(r=0);if(p[r].y!=z)break;j=r}t=A-1;0>t&&(t=u-1);p[t].y==z&&(A=t);j!=s.leftvertexindex&&j==A?(k.splice(x,1),--x):(s.leftvertexindex=j,s.rightvertexindex=A,s.topleft=p[j],
s.topright=p[A],r=j+1,r>=u&&(r=0),s.bottomleft=p[r],t=A-1,0>t&&(t=u-1),s.bottomright=p[t])}if(q>=c.length-1)k=[],w=null;else{w=Number(c[q+1]);var C=0.5*(z+w),y=l[y],D;for(D in y){j=y[D];p=g[j];u=p.length;for(x=r=h[j];;){s=x+1;s>=u&&(s=0);if(p[s].y!=z)break;if(s==r)break;x=s}for(A=r;;){s=A-1;0>s&&(s=u-1);if(p[s].y!=z)break;if(s==x)break;A=s}r=x+1;r>=u&&(r=0);t=A-1;0>t&&(t=u-1);insertSorted(k,{polygonindex:j,leftvertexindex:x,rightvertexindex:A,topleft:p[x],topright:p[A],bottomleft:p[r],bottomright:p[t]},
function(a,b){var c=CSG.interpolateBetween2DPointsForY(a.topleft,a.bottomleft,C),d=CSG.interpolateBetween2DPointsForY(b.topleft,b.bottomleft,C);return c>d?1:c<d?-1:0})}}for(var F in k)s=k[F],j=s.polygonindex,p=g[j],u=p.length,r=CSG.interpolateBetween2DPointsForY(s.topleft,s.bottomleft,z),p=new CSG.Vector2D(r,z),r=CSG.interpolateBetween2DPointsForY(s.topright,s.bottomright,z),u=new CSG.Vector2D(r,z),r=CSG.interpolateBetween2DPointsForY(s.topleft,s.bottomleft,w),j=new CSG.Vector2D(r,w),r=CSG.interpolateBetween2DPointsForY(s.topright,
s.bottomright,w),s=new CSG.Vector2D(r,w),s={topleft:p,topright:u,bottomleft:j,bottomright:s,leftline:CSG.Line2D.fromPoints(p,j),rightline:CSG.Line2D.fromPoints(s,u)},0<v.length&&(j=v[v.length-1],p=s.topleft.distanceTo(j.topright),u=s.bottomleft.distanceTo(j.bottomright),1E-5>p&&1E-5>u&&(s.topleft=j.topleft,s.leftline=j.leftline,s.bottomleft=j.bottomleft,v.splice(v.length-1,1))),v.push(s);if(0<q){z={};w={};for(s=0;s<v.length;s++){r=v[s];for(j=0;j<m.length;j++)if(!w[j]&&(t=m[j],1E-5>t.bottomleft.distanceTo(r.topleft)&&
1E-5>t.bottomright.distanceTo(r.topright))){w[j]=!0;p=r.leftline.direction().x-t.leftline.direction().x;u=r.rightline.direction().x-t.rightline.direction().x;y=1E-5>Math.abs(p);u=(x=1E-5>Math.abs(u))||0<=u;if((y||0<=p)&&u)r.outpolygon=t.outpolygon,r.leftlinecontinues=y,r.rightlinecontinues=x,z[j]=!0;break}}for(j=0;j<m.length;j++)if(!z[j]){t=m[j];t.outpolygon.rightpoints.push(t.bottomright);1E-5<t.bottomright.distanceTo(t.bottomleft)&&t.outpolygon.leftpoints.push(t.bottomleft);t.outpolygon.leftpoints.reverse();
var E=[];t.outpolygon.rightpoints.concat(t.outpolygon.leftpoints).map(function(a){a=f.to3D(a);a=new CSG.Vertex(a);E.push(a)});s=new CSG.Polygon(E,e,d);b.push(s)}}for(s=0;s<v.length;s++)r=v[s],r.outpolygon?(r.leftlinecontinues||r.outpolygon.leftpoints.push(r.topleft),r.rightlinecontinues||r.outpolygon.rightpoints.push(r.topright)):(r.outpolygon={leftpoints:[],rightpoints:[]},r.outpolygon.leftpoints.push(r.topleft),1E-5<r.topleft.distanceTo(r.topright)&&r.outpolygon.rightpoints.push(r.topright));m=
v}}};CSG.fuzzyFactory=function(a,b){for(var c=[],d=0;d<a;d++)c.push({});this.lookuptable=c;this.nextElementId=1;this.multiplier=1/b;this.objectTable={}};
CSG.fuzzyFactory.prototype={lookupOrCreate:function(a,b){var c,d=this.lookupKey(a);if(null===d){c=b(a);d=this.nextElementId++;this.objectTable[d]=c;for(var e=0;e<a.length;e++){var f=this.lookuptable[e],g=a[e]*this.multiplier,h=Math.floor(g),g=Math.ceil(g);CSG.fuzzyFactory.insertKey(d,f,h);CSG.fuzzyFactory.insertKey(d,f,g)}}else c=this.objectTable[d];return c},lookupKey:function(a){for(var b={},c=0;c<a.length;c++){var d=this.lookuptable[c],e=Math.round(a[c]*this.multiplier),e=e+"";if(e in d)b=0==c?
d[e]:CSG.fuzzyFactory.intersectSets(b,d[e]);else return null;if(CSG.fuzzyFactory.isEmptySet(b))return null}for(var f in b)return f;return null},lookupKeySetForDimension:function(a,b){var c=this.lookuptable[a],d=Math.floor(b*this.multiplier);return d in c?c[d]:{}}};CSG.fuzzyFactory.insertKey=function(a,b,c){if(c in b)b[c][a]=!0;else{var d={};d[a]=!0;b[c]=d}};CSG.fuzzyFactory.isEmptySet=function(a){for(var b in a)return!1;return!0};
CSG.fuzzyFactory.intersectSets=function(a,b){var c={},d;for(d in a)d in b&&(c[d]=!0);return c};CSG.fuzzyFactory.joinSets=function(a,b){var c={},d;for(d in a)c[d]=!0;for(d in b)c[d]=!0;return c};CSG.fuzzyCSGFactory=function(){this.vertexfactory=new CSG.fuzzyFactory(3,1E-5);this.planefactory=new CSG.fuzzyFactory(4,1E-5);this.polygonsharedfactory={}};
CSG.fuzzyCSGFactory.prototype={getPolygonShared:function(a){var b=a.getHash();return b in this.polygonsharedfactory?this.polygonsharedfactory[b]:this.polygonsharedfactory[b]=a},getVertex:function(a){return this.vertexfactory.lookupOrCreate([a.pos._x,a.pos._y,a.pos._z],function(){return a})},getPlane:function(a){return this.planefactory.lookupOrCreate([a.normal._x,a.normal._y,a.normal._z,a.w],function(){return a})},getPolygon:function(a){var b=this.getPlane(a.plane),c=this.getPolygonShared(a.shared),
d=this,a=a.vertices.map(function(a){return d.getVertex(a)});return new CSG.Polygon(a,c,b)},getCSG:function(a){var b=this,a=a.polygons.map(function(a){return b.getPolygon(a)});return CSG.fromPolygons(a)}};CSG.staticTag=1;CSG.getTag=function(){return CSG.staticTag++};CSG.Properties=function(){};
CSG.Properties.prototype={_transform:function(a){var b=new CSG.Properties;CSG.Properties.transformObj(this,b,a);return b},_merge:function(a){var b=new CSG.Properties;CSG.Properties.cloneObj(this,b);CSG.Properties.addFrom(b,a);return b}};
CSG.Properties.transformObj=function(a,b,c){for(var d in a)if("_transform"!=d&&"_merge"!=d){var e=a[d],f=e;"object"==typeof e&&("transform"in e&&"function"==typeof e.transform?f=e.transform(c):e instanceof Array?(f=[],CSG.Properties.transformObj(e,f,c)):e instanceof CSG.Properties&&(f=new CSG.Properties,CSG.Properties.transformObj(e,f,c)));b[d]=f}};
CSG.Properties.cloneObj=function(a,b){for(var c in a)if("_transform"!=c&&"_merge"!=c){var d=a[c],e=d;if("object"==typeof d)if(d instanceof Array)for(var e=[],f=0;f<d.length;f++)e.push(d[f]);else d instanceof CSG.Properties&&(e=new CSG.Properties,CSG.Properties.cloneObj(d,e));b[c]=e}};
CSG.Properties.addFrom=function(a,b){for(var c in b)"_transform"!=c&&"_merge"!=c&&(c in a&&"object"==typeof a[c]&&a[c]instanceof CSG.Properties&&"object"==typeof b[c]&&b[c]instanceof CSG.Properties?CSG.Properties.addFrom(a[c],b[c]):c in a||(a[c]=b[c]))};CSG.Connector=function(a,b,c){this.point=new CSG.Vector3D(a);this.axisvector=(new CSG.Vector3D(b)).unit();this.normalvector=(new CSG.Vector3D(c)).unit()};
CSG.Connector.prototype={normalized:function(){var a=this.axisvector.unit(),b=this.normalvector.cross(a).unit(),b=a.cross(b);return new CSG.Connector(this.point,a,b)},transform:function(a){var b=this.point.multiply4x4(a),c=this.point.plus(this.axisvector).multiply4x4(a).minus(b),a=this.point.plus(this.normalvector).multiply4x4(a).minus(b);return new CSG.Connector(b,c,a)},getTransformationTo:function(a,b,c){var b=b?!0:!1,c=c?Number(c):0,d=this.normalized(),a=a.normalized(),e=CSG.Matrix4x4.translation(this.point.negated()),
f=CSG.Plane.anyPlaneFromVector3Ds(new CSG.Vector3D(0,0,0),d.axisvector,a.axisvector),f=new CSG.OrthoNormalBasis(f),g=f.to2D(d.axisvector).angle(),h=f.to2D(a.axisvector).angle(),g=180*(h-g)/Math.PI;b&&(g+=180);e=e.multiply(f.getProjectionMatrix());e=e.multiply(CSG.Matrix4x4.rotationZ(g));e=e.multiply(f.getInverseProjectionMatrix());f=d.transform(e);b=CSG.Plane.fromNormalAndPoint(a.axisvector,new CSG.Vector3D(0,0,0));b=new CSG.OrthoNormalBasis(b);g=b.to2D(f.normalvector).angle();h=b.to2D(a.normalvector).angle();
g=180*(h-g)/Math.PI;g+=c;e=e.multiply(b.getProjectionMatrix());e=e.multiply(CSG.Matrix4x4.rotationZ(g));e=e.multiply(b.getInverseProjectionMatrix());e=e.multiply(CSG.Matrix4x4.translation(a.point));d.transform(e);return e},axisLine:function(){return new CSG.Line3D(this.point,this.axisvector)},extend:function(a){a=this.point.plus(this.axisvector.unit().times(a));return new CSG.Connector(a,this.axisvector,this.normalvector)}};
CSG.Path2D=function(a,b){var b=!!b,a=a||[],c=null;b&&0<a.length&&(c=new CSG.Vector2D(a[a.length-1]));var d=[];a.map(function(a){var a=new CSG.Vector2D(a),b=!1;null!==c&&(b=1E-5>a.distanceTo(c));b||d.push(a);c=a});this.points=d;this.closed=b};
CSG.Path2D.arc=function(a){for(var b=CSG.parseOptionAs2DVector(a,"center",0),c=CSG.parseOptionAsFloat(a,"radius",1),d=CSG.parseOptionAsFloat(a,"startangle",0),e=CSG.parseOptionAsFloat(a,"endangle",360),f=CSG.parseOptionAsFloat(a,"resolution",CSG.defaultResolution2D),a=CSG.parseOptionAsBool(a,"maketangent",!1);720<=e-d;)e-=360;for(;-720>=e-d;)e+=360;var g=[],h=Math.abs(e-d);if(1E-5>h){var l=CSG.Vector2D.fromAngle(d/180*Math.PI).times(c);g.push(l.plus(b))}else{f=Math.floor(f*h/360)+1;h=0.5*f/h;0.25<
h&&(h=0.25);for(var n=a?f+2:f,k=0;k<=n;k++)l=k,a&&(l=(k-1)*(f-2*h)/f+h,0>l&&(l=0),l>f&&(l=f)),l=CSG.Vector2D.fromAngle((d+l*(e-d)/f)/180*Math.PI).times(c),g.push(l.plus(b))}return new CSG.Path2D(g,!1)};
CSG.Path2D.prototype={concat:function(a){if(this.closed||a.closed)throw Error("Paths must not be closed");a=this.points.concat(a.points);return new CSG.Path2D(a)},appendPoint:function(a){if(this.closed)throw Error("Paths must not be closed");a=this.points.concat([a]);return new CSG.Path2D(a)},close:function(){return new CSG.Path2D(this.points,!0)},rectangularExtrude:function(a,b,c){return this.expandToCAG(a/2,c).extrude({offset:[0,0,b]})},expandToCAG:function(a,b){var c=[],d=this.points.length,e=
0;this.closed&&2<d&&(e=-1);for(var f,g=e;g<d;g++){var h=g;0>h&&(h=d-1);h=new CAG.Vertex(this.points[h]);g>e&&(f=new CAG.Side(f,h),c.push(f));f=h}return CAG.fromSides(c).expandedShell(a,b)},innerToCAG:function(){if(!this.closed)throw Error("The path should be closed!");return CAG.fromPoints(this.points)},transform:function(a){var b=this.points.map(function(b){return b.multiply4x4(a)});return new CSG.Path2D(b,this.closed)}};
CSG.addTransformationMethodsToPrototype=function(a){a.mirrored=function(a){return this.transform(CSG.Matrix4x4.mirroring(a))};a.mirroredX=function(){var a=new CSG.Plane(new CSG.Vector3D(1,0,0),0);return this.mirrored(a)};a.mirroredY=function(){var a=new CSG.Plane(new CSG.Vector3D(0,1,0),0);return this.mirrored(a)};a.mirroredZ=function(){var a=new CSG.Plane(new CSG.Vector3D(0,0,1),0);return this.mirrored(a)};a.translate=function(a){return this.transform(CSG.Matrix4x4.translation(a))};a.scale=function(a){return this.transform(CSG.Matrix4x4.scaling(a))};
a.rotateX=function(a){return this.transform(CSG.Matrix4x4.rotationX(a))};a.rotateY=function(a){return this.transform(CSG.Matrix4x4.rotationY(a))};a.rotateZ=function(a){return this.transform(CSG.Matrix4x4.rotationZ(a))};a.rotate=function(a,c,d){return this.transform(CSG.Matrix4x4.rotation(a,c,d))}};CAG=function(){this.sides=[]};CAG.fromSides=function(a){var b=new CAG;b.sides=a;return b};
CAG.fromPoints=function(a){var b=a.length;if(3>b)throw Error("CAG shape needs at least 3 points");var c=[],b=new CSG.Vector2D(a[b-1]),d=new CAG.Vertex(b);a.map(function(a){var a=new CSG.Vector2D(a),a=new CAG.Vertex(a),b=new CAG.Side(d,a);c.push(b);d=a});a=CAG.fromSides(c);if(a.isSelfIntersecting())throw Error("Polygon is self intersecting!");b=a.area();if(1E-5>Math.abs(b))throw Error("Degenerate polygon!");0>b&&(a=a.flipped());return a=a.canonicalized()};
CAG.fromPointsNoCheck=function(a){var b=[],c=new CSG.Vector2D(a[a.length-1]),d=new CAG.Vertex(c);a.map(function(a){var a=new CSG.Vector2D(a),a=new CAG.Vertex(a),c=new CAG.Side(d,a);b.push(c);d=a});return CAG.fromSides(b)};CAG.fromFakeCSG=function(a){a=a.polygons.map(function(a){return CAG.Side.fromFakePolygon(a)});return CAG.fromSides(a)};
CAG.linesIntersect=function(a,b,c,d){if(b.equals(c)||d.equals(a)){if(1E-5>d.minus(c).unit().plus(b.minus(a).unit()).length())return!0}else{b=b.minus(a);d=d.minus(c);if(1E-9>Math.abs(b.cross(d)))return!1;a=CSG.solve2Linear(-b.x,d.x,-b.y,d.y,a.x-c.x,a.y-c.y);if(1E-6<a[0]&&0.999999>a[0]&&1E-5<a[1]&&0.999999>a[1])return!0}return!1};
CAG.circle=function(a){for(var a=a||{},b=CSG.parseOptionAs2DVector(a,"center",[0,0]),c=CSG.parseOptionAsFloat(a,"radius",1),a=CSG.parseOptionAsInt(a,"resolution",CSG.defaultResolution2D),d=[],e,f=0;f<=a;f++){var g=CSG.Vector2D.fromAngleRadians(2*Math.PI*f/a).times(c).plus(b),g=new CAG.Vertex(g);0<f&&d.push(new CAG.Side(e,g));e=g}return CAG.fromSides(d)};
CAG.rectangle=function(a){var a=a||{},b=CSG.parseOptionAs2DVector(a,"center",[0,0]),a=CSG.parseOptionAs2DVector(a,"radius",[1,1]),c=new CSG.Vector2D(a.x,-a.y),b=[b.plus(a),b.plus(c),b.minus(a),b.minus(c)];return CAG.fromPoints(b)};
CAG.roundedRectangle=function(a){var a=a||{},b=CSG.parseOptionAs2DVector(a,"center",[0,0]),c=CSG.parseOptionAs2DVector(a,"radius",[1,1]),d=CSG.parseOptionAsFloat(a,"roundradius",0.2),a=CSG.parseOptionAsFloat(a,"resolution",CSG.defaultResolution2D),e=Math.min(c.x,c.y),d=Math.min(d,e-0.1),d=Math.max(0,d),c=new CSG.Vector2D(c.x-d,c.y-d),b=CAG.rectangle({center:b,radius:c});0<d&&(b=b.expand(d,a));return b};
CAG.fromCompactBinary=function(a){if("CAG"!=a.clazz)throw Error("Not a CAG");for(var b=[],c=a.vertexData,d=c.length/2,e=0,f=0;f<d;f++){var g=c[e++],h=c[e++],g=new CSG.Vector2D(g,h),g=new CAG.Vertex(g);b.push(g)}c=[];d=a.sideVertexIndices.length/2;for(f=e=0;f<d;f++)g=a.sideVertexIndices[e++],h=a.sideVertexIndices[e++],g=new CAG.Side(b[g],b[h]),c.push(g);a=CAG.fromSides(c);a.isCanonicalized=!0;return a};
CAG.prototype={toString:function(){var a="CAG ("+this.sides.length+" sides):\n";this.sides.map(function(b){a+="  "+b.toString()+"\n"});return a},toCSG:function(a,b){var c=this.sides.map(function(c){return c.toPolygon3D(a,b)});return CSG.fromPolygons(c)},toDebugString1:function(){this.sides.sort(function(a,c){return a.vertex0.pos.x-c.vertex0.pos.x});var a="";this.sides.map(function(b){a+="("+b.vertex0.pos.x+","+b.vertex0.pos.y+") - ("+b.vertex1.pos.x+","+b.vertex1.pos.y+")\n"});return a},toDebugString:function(){var a=
"CAG.fromSides([\n";this.sides.map(function(b){a+="  new CAG.Side(new CAG.Vertex(new CSG.Vector2D("+b.vertex0.pos.x+","+b.vertex0.pos.y+")), new CAG.Vertex(new CSG.Vector2D("+b.vertex1.pos.x+","+b.vertex1.pos.y+"))),\n"});return a+="]);\n"},union:function(a){var a=a instanceof Array?a:[a],b=this.toCSG(-1,1);a.map(function(a){b=b.unionSub(a.toCSG(-1,1),!1,!1)});b=b.reTesselated();b=b.canonicalized();a=CAG.fromFakeCSG(b);return a.canonicalized()},subtract:function(a){var a=a instanceof Array?a:[a],
b=this.toCSG(-1,1);a.map(function(a){b=b.subtractSub(a.toCSG(-1,1),!1,!1)});b=b.reTesselated();b=b.canonicalized();b=CAG.fromFakeCSG(b);return b=b.canonicalized()},intersect:function(a){var a=a instanceof Array?a:[a],b=this.toCSG(-1,1);a.map(function(a){b=b.intersectSub(a.toCSG(-1,1),!1,!1)});b=b.reTesselated();b=b.canonicalized();b=CAG.fromFakeCSG(b);return b=b.canonicalized()},transform:function(a){var b=a.isMirroring(),c=this.sides.map(function(b){return b.transform(a)}),c=CAG.fromSides(c);b&&
(c=c.flipped());return c},area:function(){var a=0;this.sides.map(function(b){a+=b.vertex0.pos.cross(b.vertex1.pos)});return a*=0.5},flipped:function(){var a=this.sides.map(function(a){return a.flipped()});a.reverse();return CAG.fromSides(a)},getBounds:function(){var a,b=a=0==this.sides.length?new CSG.Vector2D(0,0):this.sides[0].vertex0.pos;this.sides.map(function(c){a=a.min(c.vertex0.pos);a=a.min(c.vertex1.pos);b=b.max(c.vertex0.pos);b=b.max(c.vertex1.pos)});return[a,b]},isSelfIntersecting:function(){for(var a=
this.sides.length,b=0;b<a;b++)for(var c=this.sides[b],d=b+1;d<a;d++){var e=this.sides[d];if(CAG.linesIntersect(c.vertex0.pos,c.vertex1.pos,e.vertex0.pos,e.vertex1.pos))return!0}return!1},expandedShell:function(a,b){b=b||8;4>b&&(b=4);var c=[],d={};this.canonicalized().sides.map(function(b){var e=b.vertex1.pos.minus(b.vertex0.pos),f=e.length();if(1E-5<f){e=e.times(1/f);e=e.normal().times(a);e=[b.vertex1.pos.plus(e),b.vertex1.pos.minus(e),b.vertex0.pos.minus(e),b.vertex0.pos.plus(e)];e=CAG.fromPoints(e);
c.push(e);for(e=0;2>e;e++){var f=0==e?b.vertex0.pos:b.vertex1.pos,g=0==e?b.vertex1.pos:b.vertex0.pos,h=f.x+" "+f.y;h in d||(d[h]=[]);d[h].push({p1:f,p2:g})}}});for(var e in d){var f=d[e],g,h=f[0].p1;if(2==f.length){g=f[1].p2;f=f[0].p2.minus(h).angleDegrees();g=g.minus(h).angleDegrees();g<f&&(g+=360);g>=f+360&&(g-=360);if(g<f+180){var l=g;g=f+360;f=l}f+=90;g-=90}else f=0,g=360;if(l=g>f+359.999)f=0,g=360;if(g>f+1E-5){var n=[];l||n.push(h);var k=Math.round(b*(g-f)/360);1>k&&(k=1);for(var m=0;m<=k;m++){var j=
f+m/k*(g-f);m==k&&(j=g);j=h.plus(CSG.Vector2D.fromAngleDegrees(j).times(a));(!l||0<m)&&n.push(j)}h=CAG.fromPointsNoCheck(n);c.push(h)}}e=new CAG;return e=e.union(c)},expand:function(a,b){return this.union(this.expandedShell(a,b))},contract:function(a,b){return this.subtract(this.expandedShell(a,b))},extrude:function(a){if(0==this.sides.length)return new CSG;var b=CSG.parseOptionAs3DVector(a,"offset",[0,0,1]),c=CSG.parseOptionAsFloat(a,"twistangle",0),a=CSG.parseOptionAsInt(a,"twiststeps",10);0==c&&
(a=1);1>a&&(a=1);for(var d=[],e,f,g=0;g<=a;g++){var h=g/a,l=this,n=c*h;0!=n&&(l=l.rotateZ(n));var n=(new CSG.Vector2D(b.x,b.y)).times(h),l=l.translate(n),k=l.getBounds();k[0]=k[0].minus(new CSG.Vector2D(1,1));k[1]=k[1].plus(new CSG.Vector2D(1,1));h*=b.z;if(0==g||g==a){var n=l.toCSG(h-1,h+1),k=CSG.fromPolygons([new CSG.Polygon([new CSG.Vertex(new CSG.Vector3D(k[0].x,k[0].y,h)),new CSG.Vertex(new CSG.Vector3D(k[1].x,k[0].y,h)),new CSG.Vertex(new CSG.Vector3D(k[1].x,k[1].y,h)),new CSG.Vertex(new CSG.Vector3D(k[0].x,
k[1].y,h))])]),m=0==g;0>b.z&&(m=!m);m&&(k=k.inverse());k=k.intersect(n);k.polygons.map(function(a){0.99<Math.abs(a.plane.normal.z)&&d.push(a)})}if(0<g){n=l.sides.length;for(k=0;k<n;k++){var j=l.sides[k],q=e.sides[k],m=new CSG.Polygon([new CSG.Vertex(j.vertex1.pos.toVector3D(h)),new CSG.Vertex(j.vertex0.pos.toVector3D(h)),new CSG.Vertex(q.vertex0.pos.toVector3D(f))]),j=new CSG.Polygon([new CSG.Vertex(j.vertex1.pos.toVector3D(h)),new CSG.Vertex(q.vertex0.pos.toVector3D(f)),new CSG.Vertex(q.vertex1.pos.toVector3D(f))]);
0>b.z&&(m=m.flipped(),j=j.flipped());d.push(m);d.push(j)}}e=l;f=h}return CSG.fromPolygons(d)},check:function(){var a=[];this.isSelfIntersecting()&&a.push("Self intersects");var b={};this.sides.map(function(a){function c(a){a=a.x+" "+a.y;a in b||(b[a]=0);b[a]++}c(a.vertex0.pos);c(a.vertex1.pos)});for(var c in b){var d=b[c];d&1&&a.push("Uneven number of sides ("+d+") for point "+c)}c=this.area();1E-5>c&&a.push("Area is "+c);if(0<a.length){var e="";a.map(function(a){e+=a+"\n"});throw Error(e);}},canonicalized:function(){if(this.isCanonicalized)return this;
var a=(new CAG.fuzzyCAGFactory).getCAG(this);a.isCanonicalized=!0;return a},toCompactBinary:function(){var a=this.canonicalized(),b={},c=[],d=0,e=new Uint32Array(2*a.sides.length),f=0;a.sides.map(function(a){[a.vertex0,a.vertex1].map(function(a){var g=a.getTag(),h;g in b?h=b[g]:(h=d++,b[g]=h,c.push(a));e[f++]=h})});var g=new Float64Array(2*d),h=0;c.map(function(a){a=a.pos;g[h++]=a._x;g[h++]=a._y});return{clazz:"CAG",sideVertexIndices:e,vertexData:g}},getOutlinePaths:function(){var a={},b={};this.canonicalized().sides.map(function(c){var d=
c.getTag();a[d]=c;c=c.vertex0.getTag();c in b||(b[c]=[]);b[c].push(d)});for(var c=[];;){var d=null,e;for(e in b){var f=b[e],d=f[0];f.splice(0,1);0==f.length&&delete b[e];break}if(null===d)break;for(var f=[],g=a[d],d=g.vertex0.getTag();;){f.push(g.vertex0.pos);var h=g.vertex1.getTag();if(h==d)break;if(!(h in b))throw Error("Area is not closed!");var l=b[h],n=-1;if(1==l.length)n=0;else for(var k=null,g=g.direction().angleDegrees(),m=0;m<l.length;m++){var j=a[l[m]].direction().angleDegrees()-g;-180>
j&&(j+=360);180<=j&&(j-=360);if(0>n||j>k)n=m,k=j}k=l[n];l.splice(n,1);0==l.length&&delete b[h];g=a[k]}f=new CSG.Path2D(f,!0);c.push(f)}return c},toDxf:function(a){var b=this.getOutlinePaths();return CAG.PathsToDxf(b,a)}};
CAG.PathsToDxf=function(a,b){var c="999\nDXF generated by OpenJsCad\n  0\nSECTION\n  2\nENTITIES\n";b.append(c);a.map(function(a){var e=a.points.length+(a.closed?1:0);c="  0\nLWPOLYLINE\n  90\n"+e+"\n  70\n"+(a.closed?1:0)+"\n";for(var f=0;f<e;f++){var g=f;g>=a.points.length&&(g-=a.points.length);g=a.points[g];c+=" 10\n"+g.x+"\n 20\n"+g.y+"\n 30\n0.0\n"}b.append(c)});c="  0\nENDSEC\n  0\nEOF\n";b.append(c)};CAG.Vertex=function(a){this.pos=a};
CAG.Vertex.prototype={getTag:function(){var a=this.tag;a||(this.tag=a=CSG.getTag());return a}};CAG.Side=function(a,b){if(!(a instanceof CAG.Vertex))throw Error("Assertion failed");if(!(b instanceof CAG.Vertex))throw Error("Assertion failed");this.vertex0=a;this.vertex1=b};
CAG.Side.fromFakePolygon=function(a){if(4!=a.vertices.length)throw Error("Assertion failed");for(var b=[],c=[],d=0;4>d;d++){var e=a.vertices[d].pos;if(!(-1.001<=e.z&&-0.999>e.z)&&!(0.999<=e.z&&1.001>e.z))throw Error("Assertion failed");0<e.z&&(b.push(new CSG.Vector2D(e.x,e.y)),c.push(d))}if(2!=b.length)throw Error("Assertion failed");a=c[1]-c[0];if(1==a)a=b[1],b=b[0];else if(3==a)a=b[0],b=b[1];else throw Error("Assertion failed");return new CAG.Side(new CAG.Vertex(a),new CAG.Vertex(b))};
CAG.Side.prototype={toString:function(){return"("+this.vertex0.pos.x+","+this.vertex0.pos.y+") -> ("+this.vertex1.pos.x+","+this.vertex1.pos.y+")"},toPolygon3D:function(a,b){var c=[new CSG.Vertex(this.vertex0.pos.toVector3D(a)),new CSG.Vertex(this.vertex1.pos.toVector3D(a)),new CSG.Vertex(this.vertex1.pos.toVector3D(b)),new CSG.Vertex(this.vertex0.pos.toVector3D(b))];return new CSG.Polygon(c)},transform:function(a){var b=this.vertex0.pos.transform(a),a=this.vertex1.pos.transform(a);return new CAG.Side(new CAG.Vertex(b),
new CAG.Vertex(a))},flipped:function(){return new CAG.Side(this.vertex1,this.vertex0)},direction:function(){return this.vertex1.pos.minus(this.vertex0.pos)},getTag:function(){var a=this.tag;a||(this.tag=a=CSG.getTag());return a}};CAG.fuzzyCAGFactory=function(){this.vertexfactory=new CSG.fuzzyFactory(2,1E-5)};
CAG.fuzzyCAGFactory.prototype={getVertex:function(a){return this.vertexfactory.lookupOrCreate([a.pos._x,a.pos._y],function(){return a})},getSide:function(a){var b=this.getVertex(a.vertex0),a=this.getVertex(a.vertex1);return new CAG.Side(b,a)},getCAG:function(a){var b=this,a=a.sides.map(function(a){return b.getSide(a)});return CAG.fromSides(a)}};CSG.addTransformationMethodsToPrototype(CSG.prototype);CSG.addTransformationMethodsToPrototype(CSG.Vector2D.prototype);CSG.addTransformationMethodsToPrototype(CSG.Vector3D.prototype);
CSG.addTransformationMethodsToPrototype(CSG.Vertex.prototype);CSG.addTransformationMethodsToPrototype(CSG.Plane.prototype);CSG.addTransformationMethodsToPrototype(CSG.Polygon.prototype);CSG.addTransformationMethodsToPrototype(CSG.Line3D.prototype);CSG.addTransformationMethodsToPrototype(CSG.Connector.prototype);CSG.addTransformationMethodsToPrototype(CSG.Path2D.prototype);CSG.addTransformationMethodsToPrototype(CSG.Line2D.prototype);CSG.addTransformationMethodsToPrototype(CAG.prototype);CSG.addTransformationMethodsToPrototype(CAG.Side.prototype);
CSG.Polygon2D=function(a){this.sides=CAG.fromPoints(a).sides};CSG.Polygon2D.prototype=CAG.prototype;
